pipeline {
    agent any


    environment {
        region = "us-west-2"
        GIT_URL = 'git@github.com:bhagirathcloud/SRAssesment.git'
        docker_repo_uri = "https://hub.docker.com/repository/docker/bhaghireddy/docker_webserver"
        task_def_arn = "arn:aws:ecs:us-east-1:xxxxxxxxxxxx:task-definition/first-run-task-definition"
        cluster = "default"
        exec_role_arn = "arn:aws:iam::xxxxxxxxxxxx:role/ecsTaskExecutionRole"
    }

    stages {

        stage('checkout') {
            steps {
                deleteDir()
                git branch: 'master',
                        url: "${GIT_URL}"
            }
        }

        stage('Build') {
            steps {
                // Get SHA1 of current commit
                script {
                    commit_id = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                }
                // Build the Docker image
                sh "docker build -t ${docker_repo_uri}:${commit_id} ."
                // Get Docker login credentials for ECR
                sh "aws ecr get-login --no-include-email --region ${region} | sh"
                // Push Docker image
                sh "docker push ${docker_repo_uri}:${commit_id}"
                // Clean up
                sh "docker rmi -f ${docker_repo_uri}:${commit_id}"
            }
        }


        stage('Deploy') {
            steps {
                // Override image field in taskdef file
                sh "sed -i 's|{{image}}|${docker_repo_uri}:${commit_id}|' taskdef.json"
                // Create a new task definition revision
                sh "aws ecs register-task-definition --execution-role-arn ${exec_role_arn} --cli-input-json file://taskdef.json --region ${region}"
                // Update service on Fargate
                sh "aws ecs update-service --cluster ${cluster} --service sample-app-service --task-definition ${task_def_arn} --region ${region}"
            }
        }
    }

}

